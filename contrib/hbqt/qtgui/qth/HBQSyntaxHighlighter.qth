/*
 * $Id: HBQSyntaxHighlighter.qth 16855 2011-06-05 15:13:29Z vouchcac $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  =
Inherits = QSyntaxHighlighter
Type     =
New      =
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <QtGui/QSyntaxHighlighter>
#include <QtGui/QPlainTextEdit>
#include "hbqt_hbqsyntaxhighlighter.h"
#include "hbqt_hbqplaintextedit.h"

/*
 * HBQSyntaxHighlighter ( QTextDocument * textDocument )
 *
 */
HB_FUNC( QT_HBQSYNTAXHIGHLIGHTER )
{
   __HB_RETPTRGC__( new HBQSyntaxHighlighter( hbqt_par_QTextDocument( 1 ) ) );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>

void hbSetMultiLineCommentFormat( const QTextCharFormat & format )
void hbSetSingleLineCommentFormat( const QTextCharFormat & format )
void hbSetRule( QString name, QString pattern, QTextCharFormat & format )
void hbSetFormat( QString name, const QTextCharFormat & format )
void hbSetFormatColumnSelection( int start, int count, const QColor & color )
void hbSetRuleWithRegExp( QString name, const QRegExp & reg, const QTextCharFormat & format )
void hbSetEditor( HBQPlainTextEdit * edit )
void hbSetInitialized( bool init )
void hbSetType( int ty )

# QTextBlock currentBlock () const
# int currentBlockState () const
# QTextBlockUserData * currentBlockUserData () const
# QTextCharFormat format ( int position ) const
# virtual void highlightBlock ( const QString & text ) = 0
# int previousBlockState () const
# void setCurrentBlockState ( int newState )
# void setCurrentBlockUserData ( QTextBlockUserData * data )
# void setFormat ( int start, int count, const QTextCharFormat & format )
# void setFormat ( int start, int count, const QColor & color )
# void setFormat ( int start, int count, const QFont & font )

</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
