/*
 * $Id: QFontMetrics.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits = 
Type     = PlainObject
New      = 
</CLASS>


<CODE>
#include <QtGui/QFontMetrics>


/*
 * QFontMetrics ( const QFont & font )
 * QFontMetrics ( const QFont & font, QPaintDevice * paintdevice )
 * QFontMetrics ( const QFontMetrics & fm )
 * ~QFontMetrics ()
 */
HB_FUNC( QT_QFONTMETRICS )
{
   if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFontMetrics( 1 ) ) );
   }
   else if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && HB_ISOBJECT( 2 ) )
   {
      if( hbqt_par_QString( 1 ) == ( QString ) "QFont" )
      {
         __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFont( 2 ) ) );
      }
   }
   else if( hb_pcount() == 2 && HB_ISOBJECT( 1 ) && HB_ISOBJECT( 2 ) )
   {
      __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFont( 1 ), hbqt_par_QPaintDevice( 2 ) ) );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
int ascent () const
int averageCharWidth () const
QRect boundingRect ( QChar ch ) const
QRect boundingRect ( const QString & text ) const
QRect boundingRect ( int x, int y, int width, int height, int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
QRect boundingRect ( const QRect & rect, int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
int descent () const
QString elidedText ( const QString & text, Qt::TextElideMode mode, int width, int flags = 0 ) const
int height () const
bool inFont ( QChar ch ) const
int leading () const
int leftBearing ( QChar ch ) const
int lineSpacing () const
int lineWidth () const
int maxWidth () const
int minLeftBearing () const
int minRightBearing () const
int overlinePos () const
int rightBearing ( QChar ch ) const
QSize size ( int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
int strikeOutPos () const
QRect tightBoundingRect ( const QString & text ) const
int underlinePos () const
int width ( const QString & text, int len = -1 ) const
int width ( QChar ch ) const
int xHeight () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
