/*
 * $Id: QAbstractSlider.qth 15742 2010-11-04 04:19:36Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit  = QWidget
New      = 
Constructor = No
</CLASS>


<CODE>
#include <QtGui/QAbstractSlider>


/*
 * QAbstractSlider ( QWidget * parent = 0 )
 * ~QAbstractSlider ()
 */
HB_FUNC( QT_QABSTRACTSLIDER )
{

}
</CODE>

<ENUMS>
enum SliderAction { SliderNoAction, SliderSingleStepAdd, SliderSingleStepSub, SliderPageStepAdd, ..., SliderMove }
</ENUMS>

<PROTOS>
bool hasTracking () const
bool invertedAppearance () const
bool invertedControls () const
bool isSliderDown () const
int maximum () const
int minimum () const
Qt::Orientation orientation () const
int pageStep () const
void setInvertedAppearance ( bool )
void setInvertedControls ( bool )
void setMaximum ( int )
void setMinimum ( int )
void setPageStep ( int )
void setRange ( int min, int max )
void setSingleStep ( int )
void setSliderDown ( bool )
void setSliderPosition ( int )
void setTracking ( bool enable )
int singleStep () const
int sliderPosition () const
void triggerAction ( SliderAction action )
int value () const
</PROTOS>

<SLOTS>
void setOrientation ( Qt::Orientation )
void setValue ( int )
</SLOTS>

<SIGNALS>
void actionTriggered ( int action )
void rangeChanged ( int min, int max )
void sliderMoved ( int value )
void sliderPressed ()
void sliderReleased ()
void valueChanged ( int value )
</SIGNALS>
