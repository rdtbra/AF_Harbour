/*
 * $Id: QKeyEvent.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits = QInputEvent
Type     = Core
New      = 
Constructor = no
</CLASS>

<CODE>
#include <QtGui/QKeyEvent>


/*
 * QKeyEvent ( Type type, int key, Qt::KeyboardModifiers modifiers, const QString & text = QString(), bool autorep = false, ushort count = 1 )
 * ~QKeyEvent ()
 */
HB_FUNC( QT_QKEYEVENT )
{
   if( hb_pcount() >= 3 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
   {
      __HB_RETPTRGC__( new QKeyEvent( ( QEvent::Type ) hb_parni( 1 ), hb_parni( 2 ), ( Qt::KeyboardModifiers ) hb_parni( 3 ), HB_ISCHAR( 4 ) ? hbqt_par_QString( 4 ) : QString(), HB_ISLOG( 5 ) ? hb_parl( 5 ) : false, HB_ISNUM( 6 ) ? hb_parni( 6 ) : 1 ) );
   }
   else if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QKeyEvent( *hbqt_par_QKeyEvent( 1 ) ) );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
int count () const
bool isAutoRepeat () const
int key () const
bool matches ( QKeySequence::StandardKey key ) const
Qt::KeyboardModifiers modifiers () const
quint32 nativeModifiers () const
quint32 nativeScanCode () const
quint32 nativeVirtualKey () const
QString text () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
