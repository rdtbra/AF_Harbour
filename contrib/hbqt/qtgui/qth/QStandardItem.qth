/*
 * $Id: QStandardItem.qth 15742 2010-11-04 04:19:36Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits = 
Type     = Core
New      = 
</CLASS>

<CODE>
#include <QtGui/QStandardItem>


/*
 * QStandardItem ()
 * QStandardItem ( const QString & text )
 * QStandardItem ( const QIcon & icon, const QString & text )
 * QStandardItem ( int rows, int columns = 1 )
 * ~QStandardItem ()
 */
HB_FUNC( QT_QSTANDARDITEM )
{
   __HB_RETPTRGC__( new QStandardItem() );
}
</CODE>

<ENUMS>
enum ItemType { Type, UserType }
</ENUMS>

<PROTOS>
QString accessibleDescription () const
QString accessibleText () const
void appendColumn ( const QList<QStandardItem *> & items )
void appendRow ( const QList<QStandardItem *> & items )
void appendRow ( QStandardItem * item )
void appendRows ( const QList<QStandardItem *> & items )
QBrush background () const
Qt::CheckState checkState () const
QStandardItem * child ( int row, int column = 0 ) const
virtual QStandardItem * clone () const
int column () const
int columnCount () const
virtual QVariant data ( int role = Qt::UserRole + 1 ) const
Qt::ItemFlags flags () const
QFont font () const
QBrush foreground () const
bool hasChildren () const
QIcon icon () const
QModelIndex index () const
void insertColumn ( int column, const QList<QStandardItem *> & items )
void insertColumns ( int column, int count )
void insertRow ( int row, const QList<QStandardItem *> & items )
void insertRow ( int row, QStandardItem * item )
void insertRows ( int row, const QList<QStandardItem *> & items )
void insertRows ( int row, int count )
bool isCheckable () const
bool isDragEnabled () const
bool isDropEnabled () const
bool isEditable () const
bool isEnabled () const
bool isSelectable () const
bool isTristate () const
QStandardItemModel * model () const
QStandardItem * parent () const
virtual void read ( QDataStream & in )
void removeColumn ( int column )
void removeColumns ( int column, int count )
void removeRow ( int row )
void removeRows ( int row, int count )
int row () const
int rowCount () const
void setAccessibleDescription ( const QString & accessibleDescription )
void setAccessibleText ( const QString & accessibleText )
void setBackground ( const QBrush & brush )
void setCheckState ( Qt::CheckState state )
void setCheckable ( bool checkable )
void setChild ( int row, int column, QStandardItem * item )
void setChild ( int row, QStandardItem * item )
void setColumnCount ( int columns )
virtual void setData ( const QVariant & value, int role = Qt::UserRole + 1 )
void setDragEnabled ( bool dragEnabled )
void setDropEnabled ( bool dropEnabled )
void setEditable ( bool editable )
void setEnabled ( bool enabled )
void setFlags ( Qt::ItemFlags flags )
void setFont ( const QFont & font )
void setForeground ( const QBrush & brush )
void setIcon ( const QIcon & icon )
void setRowCount ( int rows )
void setSelectable ( bool selectable )
void setSizeHint ( const QSize & size )
void setStatusTip ( const QString & statusTip )
void setText ( const QString & text )
void setTextAlignment ( Qt::Alignment alignment )
void setToolTip ( const QString & toolTip )
void setTristate ( bool tristate )
void setWhatsThis ( const QString & whatsThis )
QSize sizeHint () const
void sortChildren ( int column, Qt::SortOrder order = Qt::AscendingOrder )
QString statusTip () const
QStandardItem * takeChild ( int row, int column = 0 )
QList<QStandardItem *> takeColumn ( int column )
QList<QStandardItem *> takeRow ( int row )
QString text () const
Qt::Alignment textAlignment () const
QString toolTip () const
virtual int type () const
QString whatsThis () const
virtual void write ( QDataStream & out ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
