/*
 * $Id: QTextBlock.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits =
Type     = Core
New      =
</CLASS>

<CODE>
#include <QtGui/QTextBlock>
#include <QtGui/QTextDocument>
#include "hbqt_hbqsyntaxhighlighter.h"

/*
 * QTextBlock ( const QTextBlock & other )
 */
HB_FUNC( QT_QTEXTBLOCK )
{
   if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QTextBlock( *hbqt_par_QTextBlock( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QTextBlock() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
//iterator begin () const
QTextBlockFormat blockFormat () const
int blockFormatIndex () const
int blockNumber () const
QTextCharFormat charFormat () const
int charFormatIndex () const
void clearLayout ()
bool contains ( int position ) const
#
#
# const QTextDocument * document () const
#
virtual const QTextDocument * document () const
#
#
//iterator end () const
int firstLineNumber () const
bool isValid () const
bool isVisible () const
QTextLayout * layout () const
int length () const
int lineCount () const
QTextBlock next () const
int position () const
QTextBlock previous () const
int revision () const
void setLineCount ( int count )
void setRevision ( int rev )
void setUserData ( HBQTextBlockUserData * data )
void setUserState ( int state )
void setVisible ( bool visible )
QString text () const
QTextList * textList () const
HBQTextBlockUserData * userData () const
int userState () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
