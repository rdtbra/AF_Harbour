/*
 * $Id: QDesktopServices.qth 16482 2011-03-18 12:37:41Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits =
Type     = 
New      = 
Constructor = no
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <QtGui/QDesktopServices>


/*
 * 
 * 
 */
HB_FUNC( QT_QDESKTOPSERVICES )
{
   __HB_RETPTRGC__( NULL );
}
</CODE>

<ENUMS>
enum StandardLocation { DesktopLocation, DocumentsLocation, FontsLocation, ApplicationsLocation, ..., CacheLocation }
</ENUMS>

<PROTOS>
QString displayName ( StandardLocation type ){
   hb_retstr_utf8( QDesktopServices::displayName( ( QDesktopServices::StandardLocation ) hb_parni( 1 ) ).toUtf8().data() );
}
bool openUrl ( const QUrl & url ){
   hb_retl( QDesktopServices::openUrl( *hbqt_par_QUrl( 1 ) ) );
}
void setUrlHandler ( const QString & scheme, QObject * receiver, const char * method ){
   void * pText;
   QDesktopServices::setUrlHandler( hb_parstr_utf8( 1, &pText, NULL ), hbqt_par_QObject( 2 ), hbqt_par_char( 3 ) );
   hb_strfree( pText );
}
QString storageLocation ( StandardLocation type ){
   hb_retstr_utf8( QDesktopServices::storageLocation( ( QDesktopServices::StandardLocation ) hb_parni( 1 ) ).toUtf8().data() );
}
void unsetUrlHandler ( const QString & scheme ){
   void * pText;
   QDesktopServices::unsetUrlHandler( hb_parstr_utf8( 1, &pText, NULL ) );
   hb_strfree( pText );
}
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
