/*
 * $Id: QMovie.qth 15742 2010-11-04 04:19:36Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject    = 
Inherits   = QObject
Type       = Core
New        =
Destructor = 
</CLASS>

<CODE>
#include <QtGui/QMovie>
#include <QtGui/QColor>
#include <QtGui/QPixmap>


/* QMovie ( QObject * parent = 0 )
 * QMovie ( QIODevice * device, const QByteArray & format = QByteArray(), QObject * parent = 0 )
 * QMovie ( const QString & fileName, const QByteArray & format = QByteArray(), QObject * parent = 0 )
 * ~QMovie ()
 */
HB_FUNC( QT_QMOVIE )
{
   __HB_RETPTRGC__( new QMovie() );
}
</CODE>

<ENUMS>
enum CacheMode { CacheNone, CacheAll }
enum MovieState { NotRunning, Paused, Running }
</ENUMS>

<PROTOS>
QColor backgroundColor () const
CacheMode cacheMode () const
int currentFrameNumber () const
QImage currentImage () const
QPixmap currentPixmap () const
QIODevice * device () const
QString fileName () const
QByteArray format () const
int frameCount () const
QRect frameRect () const
bool isValid () const
bool jumpToFrame ( int frameNumber )
int loopCount () const
int nextFrameDelay () const
QSize scaledSize ()
void setBackgroundColor ( const QColor & color )
void setCacheMode ( CacheMode mode )
void setDevice ( QIODevice * device )
void setFileName ( const QString & fileName )
void setFormat ( const QByteArray & format )
void setScaledSize ( const QSize & size )
int speed () const
MovieState state () const
</PROTOS>

<SLOTS>
bool jumpToNextFrame ()
void setPaused ( bool paused )
void setSpeed ( int percentSpeed )
void start ()
void stop ()
</SLOTS>

<SIGNALS>
void error ( QImageReader::ImageReaderError error )
void finished ()
void frameChanged ( int frameNumber )
void resized ( const QSize & size )
void started ()
void stateChanged ( QMovie::MovieState state )
void updated ( const QRect & rect )
</SIGNALS>
