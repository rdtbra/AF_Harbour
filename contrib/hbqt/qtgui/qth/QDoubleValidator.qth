/*
 * $Id: QDoubleValidator.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject    =
Inherits   = QValidator
Type       = 
New        =
Destructor = 
</CLASS>

<CODE>
#include <QtGui/QDoubleValidator>


/* QDoubleValidator ( QObject * parent )
 * QDoubleValidator ( double bottom, double top, int decimals, QObject * parent )
 * ~QDoubleValidator ()
 */
HB_FUNC( QT_QDOUBLEVALIDATOR )
{
   if( hb_pcount() >= 3 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
   {
      __HB_RETPTRGC__( new QDoubleValidator( hb_parnd( 1 ), hb_parnd( 2 ), hb_parni( 3 ), HB_ISOBJECT( 4 ) ? hbqt_par_QObject( 4 ) : 0 ) );
   }
   else if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QDoubleValidator( hbqt_par_QObject( 1 ) ) );
   }
}
</CODE>

<ENUMS>
enum State { Invalid, Intermediate, Acceptable }
enum Notation { StandardNotation, ScientificNotation }
</ENUMS>

<PROTOS>
double bottom () const
int decimals () const
Notation notation () const
void setBottom ( double )
void setDecimals ( int )
void setNotation ( Notation )
virtual void setRange ( double minimum, double maximum, int decimals = 0 )
void setTop ( double )
double top () const
//virtual QValidator::State validate ( const QString & input, const int & pos ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
