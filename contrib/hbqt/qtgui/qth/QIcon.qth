/*
 * $Id: QIcon.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Type     = PlainObject
New      =
</CLASS>


<CODE>
#include <QtGui/QIcon>


/*
 * QIcon ()
 * QIcon ( const QPixmap & pixmap )
 * QIcon ( const QIcon & other )
 * QIcon ( const QString & fileName )
 * QIcon ( QIconEngine * engine )
 * QIcon ( QIconEngineV2 * engine )
 * ~QIcon ()
 */
HB_FUNC( QT_QICON )
{

   int pcount = hb_pcount();
   if( pcount == 0 )
       __HB_RETPTRGC__( new QIcon() );
   else
      if( pcount == 1 ) 
      {
	if ( HB_ISCHAR( 1 ) )
            __HB_RETPTRGC__( new QIcon( hbqt_par_QString( 1 ) ) );
        else if( hb_pcount() == 1 && hbqt_isObjectType( 1, HBQT_TYPE_QIcon ) )
            __HB_RETPTRGC__( new QIcon( *hbqt_par_QIcon( 1 ) ) );
        else if( hb_pcount() == 1 &&  hbqt_isObjectType( 1, HBQT_TYPE_QPixmap ) )
            __HB_RETPTRGC__( new QIcon( *hbqt_par_QPixmap( 1 ) ) );
        else hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
      }
        else hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
}
</CODE>

<ENUMS>
enum Mode { Normal, Disabled, Active, Selected }
enum State { Off, On }
</ENUMS>

<PROTOS>
QSize actualSize ( const QSize & size, Mode mode = Normal, State state = Off ) const
void addFile ( const QString & fileName, const QSize & size = QSize(), Mode mode = Normal, State state = Off )
void addPixmap ( const QPixmap & pixmap, Mode mode = Normal, State state = Off )
QList<QSize> availableSizes ( Mode mode = Normal, State state = Off ) const
qint64 cacheKey () const
bool isNull () const
void paint ( QPainter * painter, const QRect & rect, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off ) const
void paint ( QPainter * painter, int x, int y, int w, int h, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off ) const
QPixmap pixmap ( const QSize & size, Mode mode = Normal, State state = Off ) const
QPixmap pixmap ( int w, int h, Mode mode = Normal, State state = Off ) const
//QPixmap pixmap ( int extent, Mode mode = Normal, State state = Off ) const        // Not Implemented

</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
