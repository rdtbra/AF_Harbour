/*
 * $Id: QItemDelegate.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = 
Inherits = QAbstractItemDelegate
Type     = 
New      =
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <QtGui/QItemDelegate>


/* QItemDelegate ( QObject * parent = 0 )
 * ~QItemDelegate ()
 * 
 */
HB_FUNC( QT_QITEMDELEGATE )
{
   if( HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QItemDelegate( hbqt_par_QObject( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QItemDelegate() );
   }
}
</CODE>

<ENUMS>
enum EndEditHint { NoHint, EditNextItem, EditPreviousItem, SubmitModelCache, RevertModelCache }
</ENUMS>

<PROTOS>
bool hasClipping () const
QItemEditorFactory * itemEditorFactory () const
void setClipping ( bool clip )
void setItemEditorFactory ( QItemEditorFactory * factory )

virtual QWidget * createEditor ( QWidget * parent, const QStyleOptionViewItem & option, const QModelIndex & index ) const
virtual void paint ( QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index ) const
virtual void setEditorData ( QWidget * editor, const QModelIndex & index ) const
virtual void setModelData ( QWidget * editor, QAbstractItemModel * model, const QModelIndex & index ) const
virtual QSize sizeHint ( const QStyleOptionViewItem & option, const QModelIndex & index ) const
virtual void updateEditorGeometry ( QWidget * editor, const QStyleOptionViewItem & option, const QModelIndex & index ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void closeEditor ( QWidget * editor, QAbstractItemDelegate::EndEditHint hint = NoHint )
void commitData ( QWidget * editor )
void sizeHintChanged ( const QModelIndex & index )
</SIGNALS>
