/*
 * $Id: QGridLayout.qth 15742 2010-11-04 04:19:36Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit  = QLayout
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QGridLayout>


/*
 * QGridLayout ( QWidget * parent )
 * QGridLayout ()
 * ~QGridLayout ()
 */
HB_FUNC( QT_QGRIDLAYOUT )
{
   __HB_RETPTRGC__( new QGridLayout( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<PROTOS>
void addItem ( QLayoutItem * item, int row, int column, int rowSpan = 1, int columnSpan = 1, Qt::Alignment alignment = 0 )   [*D=1*]
void addLayout ( QLayout * layout, int row, int column, Qt::Alignment alignment = 0 )   [*D=1*]
void addLayout ( QLayout * layout, int row, int column, int rowSpan, int columnSpan, Qt::Alignment alignment = 0 )   [*D=1*]
void addWidget ( QWidget * widget, int row, int column, Qt::Alignment alignment = 0 )   [*D=1*]
void addWidget ( QWidget * widget, int fromRow, int fromColumn, int rowSpan, int columnSpan, Qt::Alignment alignment = 0 )   [*D=1*]
QRect cellRect ( int row, int column ) const
int columnCount () const
int columnMinimumWidth ( int column ) const
int columnStretch ( int column ) const
void getItemPosition ( int index, int * row, int * column, int * rowSpan, int * columnSpan )
int horizontalSpacing () const
QLayoutItem * itemAtPosition ( int row, int column ) const
Qt::Corner originCorner () const
int rowCount () const
int rowMinimumHeight ( int row ) const
int rowStretch ( int row ) const
void setColumnMinimumWidth ( int column, int minSize )
void setColumnStretch ( int column, int stretch )
void setHorizontalSpacing ( int spacing )
void setOriginCorner ( Qt::Corner corner )
void setRowMinimumHeight ( int row, int minSize )
void setRowStretch ( int row, int stretch )
void setSpacing ( int spacing )
void setVerticalSpacing ( int spacing )
int spacing () const
int verticalSpacing () const
</PROTOS>
