/*
 * $Id: QLine.qth 16442 2011-03-09 08:10:56Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits = 
Type     = PlainObject
New      = 
</CLASS>

<CODE>
#include <QtCore/QLine>


/*
 * QLine ()
 * QLine ( const QPoint & p1, const QPoint & p2 )
 * QLine ( int x1, int y1, int x2, int y2 )
 * QLine ( const QLine & other )
 */
HB_FUNC( QT_QLINE )
{
   if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QLine( *hbqt_par_QLine( 1 ) ) );
   }
   else if( hb_pcount() == 2 && HB_ISOBJECT( 1 ) && HB_ISOBJECT( 2 ) )
   {
      __HB_RETPTRGC__( new QLine( *hbqt_par_QPoint( 1 ), *hbqt_par_QPoint( 2 ) ) );
   }
   else if( hb_pcount() == 4 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
   {
      __HB_RETPTRGC__( new QLine( hb_parni( 1 ), hb_parni( 2 ), hb_parni( 3 ), hb_parni( 4 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QLine() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QPoint p1 () const
QPoint p2 () const
int x1 () const
int x2 () const
int y1 () const
int y2 () const
int dx () const
int dy () const
bool isNull () const
void setP1 ( const QPoint & p1 )
void setP2 ( const QPoint & p2 )
void setLine ( int x1, int y1, int x2, int y2 )
void setPoints ( const QPoint & p1, const QPoint & p2 )
void translate ( const QPoint & offset )
void translate ( int dx, int dy )
QLine translated ( const QPoint & offset ) const
QLine translated ( int dx, int dy ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
