/*
 * $Id: QTextCodec.qth 16548 2011-04-07 23:13:20Z vouchcac $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = no
Inherits =
Type     = Core
New      =
Destructor = no
Constructor = no
</CLASS>

<CODE>
#include <QtCore/QTextCodec>


/*
 * QTextCodec ()
 *
 */
HB_FUNC( QT_QTEXTCODEC )
{
   //__HB_RETPTRGC__( new QTextCodec() );
}
</CODE>

<ENUMS>
enum ConversionFlag { DefaultConversion, ConvertInvalidToNull, IgnoreHeader }
flags ConversionFlags
</ENUMS>

<PROTOS>
virtual QList<QByteArray> aliases () const
bool canEncode ( QChar ch ) const
bool canEncode ( const QString & s ) const
QByteArray fromUnicode ( const QString & str ) const
//QByteArray fromUnicode ( const QChar * input, int number, ConverterState * state = 0 ) const
QTextDecoder * makeDecoder () const
QTextEncoder * makeEncoder () const
virtual int mibEnum () const = 0
virtual QByteArray name () const = 0
QString toUnicode ( const QByteArray & a ) const
#
//QString toUnicode ( const char * input, int size, ConverterState * state = 0 ) const
#
QString toUnicode ( const char * chars ) const


#                Public Statics         I do not know it these will work, though compile OK
QTextCodec * codecForCStrings ()
QTextCodec * codecForHtml ( const QByteArray & ba, QTextCodec * defaultCodec )
QTextCodec * codecForHtml ( const QByteArray & ba )
QTextCodec * codecForLocale ()
QTextCodec * codecForMib ( int mib )
QTextCodec * codecForName ( const QByteArray & name )
QTextCodec * codecForName ( const char * name )
QTextCodec * codecForTr ()
void setCodecForCStrings ( QTextCodec * codec )
void setCodecForLocale ( QTextCodec * c )
void setCodecForTr ( QTextCodec * c )


</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
