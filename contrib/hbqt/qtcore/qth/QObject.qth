/*
 * $Id: QObject.qth 16548 2011-04-07 23:13:20Z vouchcac $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
New      = pParent
Calls    = QT_Qbject
</CLASS>

<CODE>
#include <QtCore/QObject>
#include <QtCore/QVariant>

/*
 * QObject ( QObject * parent = 0 )
 * ~QObject ()
 */
HB_FUNC( QT_QOBJECT )
{
   if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      __HB_RETPTRGC__( new QObject( hbqt_par_QObject( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QObject( 0 ) );
   }
}
</CODE>

<PROTOS>
bool blockSignals ( bool block )
// const QObjectList & children () const
// bool connect ( const QObject * sender, const char * signal, const char * method, Qt::ConnectionType type = Qt::AutoConnection ) const
// bool disconnect ( const char * signal = 0, const QObject * receiver = 0, const char * method = 0 )
// bool disconnect ( const QObject * receiver, const char * method = 0 )
void dumpObjectInfo ()
void dumpObjectTree ()
QList<QByteArray> dynamicPropertyNames () const
virtual bool event ( QEvent * e )
virtual bool eventFilter ( QObject * watched, QEvent * event )
//T findChild ( const QString & name = QString() ) const
//QList<T> findChildren ( const QString & name = QString() ) const
//QList<T> findChildren ( const QRegExp & regExp ) const
bool inherits ( const char * className ) const
void installEventFilter ( QObject * filterObj )
bool isWidgetType () const
void killTimer ( int id )
#
//virtual const QMetaObject * metaObject () const
#
void moveToThread ( QThread * targetThread )
QString objectName () const
QObject * parent () const
QVariant property ( const char * name ) const
void removeEventFilter ( QObject * obj )
void setObjectName ( const QString & name )
void setParent ( QObject * parent )
bool setProperty ( const char * name, const QVariant & value )
bool signalsBlocked () const
int startTimer ( int interval )
QThread * thread () const


// bool connect ( const QObject * sender, const char * signal, const QObject * receiver, const char * method, Qt::ConnectionType type = Qt::AutoConnection )
// bool disconnect ( const QObject * sender, const char * signal, const QObject * receiver, const char * method )
const QMetaObject staticMetaObject
QString tr ( const char * sourceText, const char * disambiguation = 0, int n = -1 )
QString trUtf8 ( const char * sourceText, const char * disambiguation = 0, int n = -1 )
</PROTOS>

<SLOTS>
void deleteLater ()
</SLOTS>

<SIGNALS>
void destroyed ( QObject * obj = 0 )
</SIGNALS>
