/*
 * $Id: QWebFrame.qth 15742 2010-11-04 04:19:36Z vszakats $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherits = QObject
Type     = Core
New      =
Destructor = no
Constructor = no
folder   = qtwebkit
</CLASS>

<CODE>
#include "hbqtgui.h"

#include <QtWebKit/QWebFrame>
#include <QtWebKit/QWebSecurityOrigin>

/*
 *
 */
HB_FUNC( QT_QWEBFRAME )
{
   // __HB_RETPTRGC__( new QWebFrame() );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void addToJavaScriptWindowObject ( const QString & name, QObject * object )
void addToJavaScriptWindowObject ( const QString & name, QObject * object, QScriptEngine::ValueOwnership own )
QList<QWebFrame *> childFrames () const
QSize contentsSize () const
QString frameName () const
QRect geometry () const
QWebHitTestResult hitTestContent ( const QPoint & pos ) const
QIcon icon () const
void load ( const QUrl & url )
// void load ( const QWebNetworkRequest & req )
QMultiMap<QString, QString> metaData () const
QWebPage * page () const
QWebFrame * parentFrame () const
QPoint pos () const
void render ( QPainter * painter, const QRegion & clip )
void render ( QPainter * painter )
QString renderTreeDump () const
void scroll ( int dx, int dy )
int scrollBarMaximum ( Qt::Orientation orientation ) const
int scrollBarMinimum ( Qt::Orientation orientation ) const
Qt::ScrollBarPolicy scrollBarPolicy ( Qt::Orientation orientation ) const
int scrollBarValue ( Qt::Orientation orientation ) const
QPoint scrollPosition () const
QWebSecurityOrigin securityOrigin () const
void setContent ( const QByteArray & data, const QString & mimeType = QString(), const QUrl & baseUrl = QUrl() )
void setHtml ( const QString & html, const QUrl & baseUrl = QUrl() )
void setScrollBarPolicy ( Qt::Orientation orientation, Qt::ScrollBarPolicy policy )
void setScrollBarValue ( Qt::Orientation orientation, int value )
void setScrollPosition ( const QPoint & pos )
void setTextSizeMultiplier ( qreal factor )
void setUrl ( const QUrl & url )
void setZoomFactor ( qreal factor )
qreal textSizeMultiplier () const
QString title () const
QString toHtml () const
QString toPlainText () const
QUrl url () const
qreal zoomFactor () const
</PROTOS>

<SLOTS>
QVariant evaluateJavaScript ( const QString & scriptSource )
void print ( QPrinter * printer ) const
</SLOTS>

<SIGNALS>
void iconChanged ()
void initialLayoutCompleted ()
void javaScriptWindowObjectCleared ()
void titleChanged ( const QString & title )
void urlChanged ( const QUrl & url )
</SIGNALS>
